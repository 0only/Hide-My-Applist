on: [push, pull_request]

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]

    steps:
      - name: Check out
        uses: actions/checkout@v2

      - name: Gradle wrapper validation
        uses: gradle/wrapper-validation-action@v1

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'

      - name: Cache Gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle-
          
      - name: Update submodules
        run: git submodule init && git submodule update
      
      - name: Make gradlew executable
        run: chmod +x ./gradlew
        
      - name: Gradle prebuild
        run: ./gradlew prebuild
        
      - name: Replace android-hidden-api android.jar
        run: bash ./replace_android_hidden_api_jar.sh
        
      - name: Build Release with Native
        id: buildRelease
        run: |
          ./gradlew :app:assembleRelease
          echo "::set-output name=releaseName::Hide-My-Applist.$(ls app/release/*.apk | head -1 | awk -F '(/|.Native.apk)' '{print $3}').r$(git rev-list --count HEAD).$(git rev-parse --short HEAD)"
        
      - name: Build Release without Native
        run: ./gradlew :app:assembleNon_native
        
      - name: List build dir
        run: ls -l ./app/release
        
      - name: Prepare Signing Keystore
        id: signKey
        run: |
          if [ "" != "${KEY_STORE}" ]; then
          echo "${KEY_STORE}" | base64 --decode > key.jks
          echo "::set-output name=key::1"
          fi
        env: 
          KEY_STORE: ${{ secrets.KEY_STORE }}
        
      - name: Sign Apks
        if: ${{ steps.signKey.outputs.key }}
        run: |
          mkdir app/release/signed
          apksigner sign --ks ./key.jks \
          --ks-pass env:KEY_STORE_PASSWORD \
          --ks-key-alias ${ALIAS} \
          --key-pass env:KEY_PASSWORD \
          --in $(ls app/release/*.Native.apk | head -1) \
          --out ./app/release/signed/${{ steps.buildRelease.outputs.releaseName }}.Native.apk
          apksigner sign --ks ./key.jks \
          --ks-pass env:KEY_STORE_PASSWORD \
          --ks-key-alias ${ALIAS} \
          --key-pass env:KEY_PASSWORD \
          --in $(ls app/release/*.Non-Native.apk | head -1) \
          --out ./app/release/signed/${{ steps.buildRelease.outputs.releaseName }}.Non-Native.apk
        env: 
          KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
          ALIAS: ${{ secrets.ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

      - name: Upload Signed Native build artifact
        if: ${{ steps.signKey.outputs.key }}
        uses: actions/upload-artifact@v2
        with:
          name: "${{ steps.buildRelease.outputs.releaseName }}.Native"
          path: "app/release/signed/${{ steps.buildRelease.outputs.releaseName }}.Native.apk"
          
      - name: Upload Signed Non-Native build artifact
        if: ${{ steps.signKey.outputs.key }}
        uses: actions/upload-artifact@v2
        with:
          name: "${{ steps.buildRelease.outputs.releaseName }}.Non-Native"
          path: "app/release/signed/${{ steps.buildRelease.outputs.releaseName }}.Non-Native.apk"
          
      - name: Upload Unsigned Native build artifact
        if: ${{ !steps.signKey.outputs.key }}
        uses: actions/upload-artifact@v2
        with:
          name: "${{ steps.buildRelease.outputs.releaseName }}.Native.Unsigned"
          path: "app/release/*.Native.apk"
          
      - name: Upload Unsigned Non-Native build artifact
        if: ${{ !steps.signKey.outputs.key }}
        uses: actions/upload-artifact@v2
        with:
          name: "${{ steps.buildRelease.outputs.releaseName }}.Non-Native.Unsigned"
          path: "app/release/*.Non-Native.apk"
